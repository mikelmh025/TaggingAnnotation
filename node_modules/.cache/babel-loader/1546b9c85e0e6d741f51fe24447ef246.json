{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  data: {\n    'Top and front side': [{\n      name: 'Length',\n      check: false\n    }, {\n      name: 'Direction',\n      check: false\n    }, {\n      name: 'Curl Level',\n      check: false\n    }],\n    'Side': [{\n      name: 'Length',\n      check: false\n    }, {\n      name: 'Curl Level',\n      check: false\n    }],\n    'Braid': [{\n      name: 'Yes/No Braid',\n      check: false\n    }, {\n      name: 'Count',\n      check: false\n    }, {\n      name: 'Position',\n      check: false\n    }, {\n      name: 'Braid Style',\n      check: false\n    }]\n  }\n};\nexport const categorySlice = createSlice({\n  name: 'category',\n  initialState,\n  reducers: {\n    isChecked: (state, action) => {\n      const dataArray = state.data[action.payload.groupName];\n      dataArray.forEach(element => {\n        if (element.name === action.payload.selection) {\n          element.check = true;\n        }\n      });\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  isChecked\n} = categorySlice.actions;\nexport default categorySlice.reducer;","map":{"version":3,"names":["createSlice","initialState","data","name","check","categorySlice","reducers","isChecked","state","action","dataArray","payload","groupName","forEach","element","selection","actions","reducer"],"sources":["/Users/zeyucheng/Desktop/taggingAnnotation/src/slices/categorySlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n    data: {\n        'Top and front side': [\n                {name: 'Length', check: false},\n                {name: 'Direction', check: false},\n                {name: 'Curl Level', check: false},\n            ],\n        'Side': [\n                {name: 'Length', check: false},\n                {name: 'Curl Level', check: false},\n            ],\n        'Braid': [\n            {name: 'Yes/No Braid', check: false}, \n            {name: 'Count', check: false},\n            {name: 'Position', check: false},\n            {name: 'Braid Style', check: false}, \n        ],\n    }\n}\n\nexport const categorySlice = createSlice({\n  name: 'category',\n  initialState,\n  reducers: {\n    isChecked: (state, action) => {\n      const dataArray = state.data[action.payload.groupName];\n      dataArray.forEach(element => {\n        if(element.name === action.payload.selection){\n          element.check = true;\n        }\n      });\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { isChecked } = categorySlice.actions;\n\nexport default categorySlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE;IACF,oBAAoB,EAAE,CACd;MAACC,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAK,CAAC,EAC9B;MAACD,IAAI,EAAE,WAAW;MAAEC,KAAK,EAAE;IAAK,CAAC,EACjC;MAACD,IAAI,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAK,CAAC,CACrC;IACL,MAAM,EAAE,CACA;MAACD,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAK,CAAC,EAC9B;MAACD,IAAI,EAAE,YAAY;MAAEC,KAAK,EAAE;IAAK,CAAC,CACrC;IACL,OAAO,EAAE,CACL;MAACD,IAAI,EAAE,cAAc;MAAEC,KAAK,EAAE;IAAK,CAAC,EACpC;MAACD,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAK,CAAC,EAC7B;MAACD,IAAI,EAAE,UAAU;MAAEC,KAAK,EAAE;IAAK,CAAC,EAChC;MAACD,IAAI,EAAE,aAAa;MAAEC,KAAK,EAAE;IAAK,CAAC;EAE3C;AACJ,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGL,WAAW,CAAC;EACvCG,IAAI,EAAE,UAAU;EAChBF,YAAY;EACZK,QAAQ,EAAE;IACRC,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAMC,SAAS,GAAGF,KAAK,CAACN,IAAI,CAACO,MAAM,CAACE,OAAO,CAACC,SAAS,CAAC;MACtDF,SAAS,CAACG,OAAO,CAACC,OAAO,IAAI;QAC3B,IAAGA,OAAO,CAACX,IAAI,KAAKM,MAAM,CAACE,OAAO,CAACI,SAAS,EAAC;UAC3CD,OAAO,CAACV,KAAK,GAAG,IAAI;QACtB;MACF,CAAC,CAAC;IACJ;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEG;AAAU,CAAC,GAAGF,aAAa,CAACW,OAAO;AAElD,eAAeX,aAAa,CAACY,OAAO"},"metadata":{},"sourceType":"module"}